:class IPAddress.Spec
  :is Spec
  :const describes: "IPAddress"

  :it "creates an IPv4 address from a raw U32 value"
    assert: "\(IPAddress.new_raw_v4(0x00_00_00_00))" == "0.0.0.0"
    assert: "\(IPAddress.new_raw_v4(0xFF_FF_FF_FF))" == "255.255.255.255"
    assert: "\(IPAddress.new_raw_v4(0x01_23_45_67))" == "1.35.69.103"
    assert: "\(IPAddress.new_raw_v4(0xFE_DC_BA_98))" == "254.220.186.152"

  :it "creates an IPv6 address from two raw U64 values"
    assert: "\(IPAddress.new_raw_v6(0, 0))" == "::"
    assert: "\(IPAddress.new_raw_v6(0, 1))" == "::1"
    assert: "\(IPAddress.new_raw_v6(0xFF02_0000_0000_0000, 0))" == "ff02::"
    assert: "\(IPAddress.new_raw_v6(0xFF02_0000_0000_0000, 1))" == "ff02::1"
    assert: "\(IPAddress.new_raw_v6(0xFF02_03EE_0000_0000, 0))" == "ff02:3ee::"
    assert: "\(IPAddress.new_raw_v6(0xFF02_03EE_0000_0000, 1))" == "ff02:3ee::1"
    assert: "\(IPAddress.new_raw_v6(0xB, 0x2))" == "::b:0:0:0:2"
    assert: (
      "\(IPAddress.new_raw_v6(0x0123_4567_89AB_CDEF, 0xFEDC_BA98_7654_3210))"
      == "123:4567:89ab:cdef:fedc:ba98:7654:3210"
    )
